
; letterfall/main.sscm - main driver
; Copyright (C) 2012 Alan Manuel K. Gloria
;
; This file is part of Letterfall.
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY, without even the implied warranty of
; MERCHANTIBILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program.  If not, see <http://www.gnu.org/licenses/>

define-module
  letterfall main
  :export
  \\
    main

use-modules
  letterfall kont
  letterfall kgtk

define main(_)
  execute-kmonad kmain
    lambda ___
      exit 0
define kmain $ kdo
  kgtk-start "Letterfall"
  kmain-loop
define kmain-loop $ kdo
  lift '()
  title-screen
  play-game
  kmain-loop
define title-screen $ kdo
  lift '()
  center 8 "LETTERFALL"
  center 16 "TYPE 'PLAY' TO START"
  refresh-screen
  wait-for-play
define wait-for-play $ kdo
  lift '()
  wait-for-play-loop 17 '(#\P #\L #\A #\Y)
define wait-for-play-loop(col cs) $ cond
  null?(cs) $ lift '()
  #t        $ kdo
    let c \\ lift $ car cs
    let k \\ get-key
    if { char-toupper(k) char=? c }
       kdo
         gotoxy col 18
         print c
         refresh-screen
         wait-for-play-loop { col + 1 } $ cdr cs
       wait-for-play-loop col cs

define center(line str) $ kdo
  let len \\ lift $ string-length str
  let col \\ lift $ { 20 - inexact->exact(floor{ len / 2 })}
  gotoxy col line
  print str

define play-game $ kdo
  lift '()
  init-screen
  refresh-screen
  get-key

define init-screen $ kdo
  lift '()
  cls
  gotoxy 7 0
  print "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  gotoxy 7 24
  print "--------------------------"

define char-toupper(c)
  let
    $ n $ char->integer c
    cond
      {{ 96 < n } and { n <= { 96 + 26 }}}
        integer->char $ { n - 32 }
      #t $ c

; vim: set ft=scheme : ;
